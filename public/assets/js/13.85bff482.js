(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{601:function(t,a,s){t.exports=s.p+"assets/img/map.f9284e23.png"},632:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("map是Go语言提供的一种抽象数据类型，它表示一组无序的键值对(key-value)")])]),t._v(" "),n("h2",{attrs:{id:"声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),n("p",[n("strong",[t._v("关键字定义")]),t._v("："),n("code",[t._v("map")])]),t._v(" "),n("p",[n("strong",[t._v("零值")]),t._v("："),n("code",[t._v("nil")])]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("👀")]),t._v(" "),n("ul",[n("li",[t._v("向"),n("code",[t._v("nil")]),t._v("的map类型里添加数据会导致"),n("code",[t._v("panic")]),t._v("；")])]),t._v(" "),n("h2",{attrs:{id:"初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("字面量初始化")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("m"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("内置函数make()初始化")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("m"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])])])]),t._v(" "),n("h2",{attrs:{id:"操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("m"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新增")]),t._v("\nm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除")]),t._v("\nv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ok"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查询")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ok"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取key的个数")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[t._v("👀")]),t._v(" "),n("ul",[n("li",[t._v("删除不存在的key不会导致panic；")]),t._v(" "),n("li",[t._v("查询不存在的key，如果未使用“comma ok”语法，则会返回value类型的零值")])]),t._v(" "),n("h2",{attrs:{id:"实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),n("p",[t._v("参见"),n("code",[t._v("$GOROOT/src/runtime/map.go")])]),t._v(" "),n("h3",{attrs:{id:"map的数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map的数据结构"}},[t._v("#")]),t._v(" map的数据结构")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" hmap "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcount     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" \t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前保存的元素个数")]),t._v("\n\tflags     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\t\t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前map所处的状态标志")]),t._v("\n\tB         "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("  \t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//bucket数组的大小的对数：2^B=bucket数量")]),t._v("\n\tnoverflow "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v(" \t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//overflow buckets的大约数量")]),t._v("\n\thash0     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v(" \t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hash函数的种子值")]),t._v("\n\tbuckets    unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指向bucket数组的指针")]),t._v("\n\toldbuckets unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在map扩容阶段指向前一个bucket数组的指针")]),t._v("\n\tnevacuate  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("        \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//map扩容阶段充当扩容进度计数器,小于此bucket都已完成了数据排空和迁移操作")]),t._v("\n\textra "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mapextra \t\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可选字段，与gc相关")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("h3",{attrs:{id:"bucket的数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bucket的数据结构"}},[t._v("#")]),t._v(" bucket的数据结构")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a bucket for a Go map")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" bmap "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttophash "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bucketCnt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实际上编辑期间会动态生产一个新的结构体")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" bmap "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tophash  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\n  keys \t\t "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("keytype\n  values   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("valuetype\n  overflow "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[n("img",{attrs:{src:s(601),alt:""}})]),t._v(" "),n("p",[t._v("key和value分开存储，目的是为了减少内存对齐带来的内存浪费，以map[int8]int64为例：")]),t._v(" "),n("p",[t._v("Key和value分开，内存分配如下")]),t._v(" "),n("table",[n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[0]")]),t._v(" "),n("td",[t._v("key[1]")]),t._v(" "),n("td",[t._v("key[2]")]),t._v(" "),n("td",[t._v("key[3]")]),t._v(" "),n("td",[t._v("key[4]")]),t._v(" "),n("td",[t._v("key[5]")]),t._v(" "),n("td",[t._v("key[6]")]),t._v(" "),n("td",[t._v("key[7]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[0]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[1]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[2]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[3]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[4]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[5]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[6]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[7]")])])]),t._v(" "),n("p",[t._v("key和value不分开，内存分配如下：")]),t._v(" "),n("table",[n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[0]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[0]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[1]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[1]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[2]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[2]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[3]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[3]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[4]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[4]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[5]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[5]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[6]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[6]")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",[t._v("key[7]")]),t._v(" "),n("td",{attrs:{colspan:"7"}},[t._v("padding")])]),t._v(" "),n("tr",{attrs:{align:"center"}},[n("td",{attrs:{colspan:"8"}},[t._v("value[7]")])])]),t._v(" "),n("p",[t._v("每个bucket可以存储8个键值对，超过就会创建一个新的bucket，通过overflow链接")]),t._v(" "),n("p",[t._v("当有两个或以上数量的键被"),n("code",[t._v("Hash")]),t._v("到了同一个bucket时，我们称这些键发生了冲突，Go语言使用链表解决键冲突。")]),t._v(" "),n("p",[t._v("hash冲突并不是好事情，它降低了存取效率，好的Hash算法可以保证Hash值得随机性，但无论使用哪种Hash算法，冲突终究不可避免，当冲突较多的时候就需要采取一些措施来减少冲突。")]),t._v(" "),n("h3",{attrs:{id:"负载因子loadfactor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#负载因子loadfactor"}},[t._v("#")]),t._v(" 负载因子LoadFactor")]),t._v(" "),n("blockquote",[n("p",[t._v("负载因子用于衡量一个Hash表的冲突情况，计算公式如下：")]),t._v(" "),n("p",[t._v("负载因子 = 键数量 / bucket数量")])]),t._v(" "),n("ul",[n("li",[t._v("负载因子过小，空间利用率低；")]),t._v(" "),n("li",[t._v("负载因子过大，说明冲突严重，存取效率低；")])]),t._v(" "),n("p",[t._v("当Hash表的负载因子过大时需要rehash，即申请更多的bucket，并对所有的键值对重新组织，使其均匀的分布在这些bucket中。")]),t._v(" "),n("ul",[n("li",[t._v("redis的负载因子大于1时就会触发rehash；")]),t._v(" "),n("li",[t._v("go的负载因子大于6.5时才会触发rehash；")])]),t._v(" "),n("h3",{attrs:{id:"扩容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩容"}},[t._v("#")]),t._v(" 扩容")]),t._v(" "),n("p",[t._v("条件：")]),t._v(" "),n("ul",[n("li",[t._v("负载因子大于6.5时")]),t._v(" "),n("li",[t._v("overflow的数量大于2^15=32768")])]),t._v(" "),n("h4",{attrs:{id:"增量扩容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#增量扩容"}},[t._v("#")]),t._v(" 增量扩容")]),t._v(" "),n("blockquote",[n("p",[t._v("通过将bucket数组扩大一倍实现，并搬迁键值对")])]),t._v(" "),n("ol",[n("li",[t._v("oldbuckets指向现有bucket数组；")]),t._v(" "),n("li",[t._v("创建一个两倍现有规模的bucket数组；")]),t._v(" "),n("li",[t._v("buckets指向新的bucket数组；")]),t._v(" "),n("li",[t._v("将oldbuckets的键值对搬迁到新的bucket数组；")]),t._v(" "),n("li",[t._v("释放oldbuckets；")])]),t._v(" "),n("h4",{attrs:{id:"等量扩容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#等量扩容"}},[t._v("#")]),t._v(" 等量扩容")]),t._v(" "),n("blockquote",[n("p",[t._v("用于解决一个bucket链接很多bucket，overflow数量过高")]),t._v(" "),n("p",[t._v("bucket数组大小不变，重新排列键值对，分散到不同的bucket数组中")])]),t._v(" "),n("h3",{attrs:{id:"增删改查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#增删改查"}},[t._v("#")]),t._v(" 增删改查")]),t._v(" "),n("h4",{attrs:{id:"查找过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查找过程"}},[t._v("#")]),t._v(" 查找过程")]),t._v(" "),n("ul",[n("li",[t._v("根据key计算hash值；")]),t._v(" "),n("li",[t._v("取hash值低位与hmap.B取模来确定bucket的位置；")]),t._v(" "),n("li",[t._v("取hash值高位，在tophash数组中查询；")]),t._v(" "),n("li",[t._v("如果tophash[i]中存储的hash值与当前key的hash值相等，则获取tophash[i]的key值进行比较；")]),t._v(" "),n("li",[t._v("当前bucket没有找到，则依次从溢出的bucket中查找；")])]),t._v(" "),n("blockquote",[n("p",[t._v("如果当前map处于搬迁过程中，那么查找时从oldbuckets数组中查找，不再从新的buckets数组中查找")])]),t._v(" "),n("h4",{attrs:{id:"添加过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加过程"}},[t._v("#")]),t._v(" 添加过程")]),t._v(" "),n("ul",[n("li",[t._v("根据key计算hash值；")]),t._v(" "),n("li",[t._v("取hash值低位与hmap.B取模来确定bucket的位置；")]),t._v(" "),n("li",[t._v("查找该key是否存在\n"),n("ul",[n("li",[t._v("如果存在，则直接更新；")]),t._v(" "),n("li",[t._v("如果不存在，则从该bucket中寻找空余位置并插入；")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("如果当前map处于搬迁过程中，那么直接添加到新的buckets数组中")])]),t._v(" "),n("h4",{attrs:{id:"删除过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除过程"}},[t._v("#")]),t._v(" 删除过程")]),t._v(" "),n("ul",[n("li",[t._v("查找key是否存在\n"),n("ul",[n("li",[t._v("存在，则删除；")]),t._v(" "),n("li",[t._v("不存在，则什么也不做；")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);