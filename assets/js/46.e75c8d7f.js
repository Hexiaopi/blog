(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{730:function(e,s,a){e.exports=a.p+"assets/img/websocket.49eaf0aa.png"},806:function(e,s,a){"use strict";a.r(s);var t=a(11),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("WebSocket是为了提供web应用程序和服务端全双工通信而专门定制的一种网络协议，和HTTP协议一样位于OSI模型的应用层协议。")])]),e._v(" "),t("h2",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[e._v("#")]),e._v(" 特点")]),e._v(" "),t("ul",[t("li",[e._v("建立在TCP协议之上")]),e._v(" "),t("li",[e._v("与HTTP协议有着良好的兼容性，握手阶段采用HTTP协议，默认端口是80和443")]),e._v(" "),t("li",[e._v("数据格式比较轻量，性能开销小、通信高效")]),e._v(" "),t("li",[e._v("可以发送文本，也可以发送二进制数据")]),e._v(" "),t("li",[e._v("没有同源限制，客户端可以与任意服务器通信")]),e._v(" "),t("li",[e._v("协议标识符是ws(如果加密，则为wss)，形式：ws://echo.websocket.org")])]),e._v(" "),t("h2",{attrs:{id:"交互时序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#交互时序"}},[e._v("#")]),e._v(" 交互时序")]),e._v(" "),t("p",[t("img",{attrs:{src:a(730),alt:"websocket"}})]),e._v(" "),t("h2",{attrs:{id:"抓包分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抓包分析"}},[e._v("#")]),e._v(" 抓包分析")]),e._v(" "),t("h3",{attrs:{id:"http请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http请求"}},[e._v("#")]),e._v(" HTTP请求")]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("GET /ws hTTP/1.1\nHost: localhost:2021\nUpgrade: websocket\nConnection: Upgrade\nSec-Websocket-Key: mViTimINUhcF0fBHeX+wqA==\nSec-Websocket-Version: 13\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("ul",[t("li",[t("code",[e._v("Connection: Upgrade")]),e._v("表明要升级协议")]),e._v(" "),t("li",[t("code",[e._v("Upgrade: websocket")]),e._v("表明升级至websocket协议")]),e._v(" "),t("li",[t("code",[e._v("Sec-Websocket-Key")]),e._v("是客户端发送的一个base64编码的秘文，要求服务端返回一个对应加密的"),t("code",[e._v("Sec-Websocket-Accept")]),e._v("应答，否则客户端会抛出“Error during WebSocket handshake”错误，并关闭连接")]),e._v(" "),t("li",[t("code",[e._v("Sec-Websocket-Version: 13")]),e._v("表示 websocket的版本，如果服务端不支持该版本，需要返回一个Sec-Websocket-Version里面包含服务端支持的版本号")])]),e._v(" "),t("h3",{attrs:{id:"http返回"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http返回"}},[e._v("#")]),e._v(" HTTP返回")]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("HTTP/1.1 101 Switching Protocols\nConnection: Upgrade\nUpgrade: websocket\nSec-Websocket-Accept: YLcYR/p/mS8hENqlgMXtFTggdv8=\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ul",[t("li",[e._v("Sec-Websocket-Accept是服务端采用与客户端一致的秘钥计算出来后返回客户端，计算公式")])]),e._v(" "),t("blockquote",[t("p",[e._v("toBase64(sha1(Sec-WebSocket-Key + 258EAFA5-E914-47DA-95CA-C5AB0DC85B11))")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("HTTP/1.1 101 Switching Protocols")]),e._v("表示服务端接受WebSocket协议的客户端连接")])]),e._v(" "),t("h2",{attrs:{id:"数据帧格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据帧格式"}},[e._v("#")]),e._v(" 数据帧格式")]),e._v(" "),t("blockquote",[t("p",[e._v("从左到右，单位是比特。比如"),t("code",[e._v("FIN")]),e._v("、"),t("code",[e._v("RSV1")]),e._v("、"),t("code",[e._v("RSV2")]),e._v("、"),t("code",[e._v("RSV3")]),e._v("各占据1比特，"),t("code",[e._v("opcode")]),e._v("占据4比特")]),e._v(" "),t("p",[e._v("内容包括了标识、操作代码、掩码、数据长度")])]),e._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-------+-+-------------+-------------------------------+\n |F|R|R|R| opcode|M| Payload len |    Extended payload length    |\n |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |\n |N|V|V|V|       |S|             |   (if payload len==126/127)   |\n | |1|2|3|       |K|             |                               |\n +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +\n |     Extended payload length continued, if payload len == 127  |\n + - - - - - - - - - - - - - - - +-------------------------------+\n |                               |Masking-key, if MASK set to 1  |\n +-------------------------------+-------------------------------+\n | Masking-key (continued)       |          Payload Data         |\n +-------------------------------- - - - - - - - - - - - - - - - +\n :                     Payload Data continued ...                :\n + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +\n |                     Payload Data continued ...                |\n +---------------------------------------------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[e._v("FIN")]),e._v("：1个比特")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("如果是1：表示这是消息的最后一个分片；")])]),e._v(" "),t("li",[t("p",[e._v("如果是0：标识这不是消息的最后一个分片；")])])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("RSV1")]),e._v("、"),t("code",[e._v("RSV2")]),e._v("、"),t("code",[e._v("RSV3")]),e._v("：各占1个比特")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("一般情况下全为0，当客户端、服务端协商采用websocket扩展时，这三个标志位可以非0，且值得含义由扩展进行定义；")])]),e._v(" "),t("li",[t("p",[e._v("如果出现非零的值，且并没有采用websocket扩展，连接出错")])])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Opcode")]),e._v("：4个比特")]),e._v(" "),t("ul",[t("li",[e._v("%x0：表示一个延续帧。当Opcode为0时，表示本次数据传输采用了数据分片，当前收到的数据帧为其中一个数据分片。")]),e._v(" "),t("li",[e._v("%x1：表示这是一个文本帧（frame）")]),e._v(" "),t("li",[e._v("%x2：表示这是一个二进制帧（frame）")]),e._v(" "),t("li",[e._v("%x3-7：保留的操作代码，用于后续定义的非控制帧。")]),e._v(" "),t("li",[e._v("%x8：表示连接断开。")]),e._v(" "),t("li",[e._v("%x9：表示这是一个ping操作。")]),e._v(" "),t("li",[e._v("%xA：表示这是一个pong操作。")]),e._v(" "),t("li",[e._v("%xB-F：保留的操作代码，用于后续定义的控制帧。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Mask")]),e._v("：1个比特")]),e._v(" "),t("blockquote",[t("p",[e._v("表示是否要对数据载荷进行掩码操作")]),e._v(" "),t("ul",[t("li",[e._v("从客户端向服务端发送数据时，需要对数据进行掩码操作；")]),e._v(" "),t("li",[e._v("从服务端向客户端发送数据时，不需要对数据进行掩码操作；")])]),e._v(" "),t("p",[e._v("如果服务端接收到的数据没有进行掩码操作，服务端需要断开连接")]),e._v(" "),t("p",[e._v("如果Mask是1，那么Masking-key中会定义一个掩码键，并用这个掩码键对数据载荷进行反掩码。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Payload length")]),e._v("：数据载荷的长度，单位是字节。为7位、或2✖️8位，或8✖️8位")]),e._v(" "),t("ul",[t("li",[e._v("[0,126)：数据的长度就是Payload length的大小；")]),e._v(" "),t("li",[e._v("126：后续2个字节为数据的长度；")]),e._v(" "),t("li",[e._v("127：后续8个字节为数据的长度；")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Masking-key")]),e._v("：0或4字节")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Mask")]),e._v("为1，则包含4字节的"),t("code",[e._v("Masking-key")])]),e._v(" "),t("li",[t("code",[e._v("Mask")]),e._v("为0，则不包含"),t("code",[e._v("Masking-key")])])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Payload data")]),e._v("：扩展数据+应用数据")]),e._v(" "),t("ul",[t("li",[e._v("如果没有协商使用扩展的话，扩展数据为0字节；")]),e._v(" "),t("li",[e._v("所有的扩展都必须声明扩展数据的长度，扩展如何使用必须在握手阶段就协商好；")])])])]),e._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.52im.net/thread-831-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("新手快速入门：WebSocket简明教程"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/chyingp/p/websocket-deep-in.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSocket协议：5分钟从入门到精通"),t("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);